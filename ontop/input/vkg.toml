title="Ontop Portal for the CRIM Project"

[[tabGroups]]

name="Examples of SPARQL queries"

[[tabGroups.tabs]]

name="Compositions and their composers"
query="""

## This query retrieves compositions and their composers

prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>
prefix dcterms: <http://purl.org/dc/terms/>
prefix data: <https://data.crimproject.org/>
prefix omac: <https://omac.crimproject.org/>
PREFIX schema: <https://schema.org/>

SELECT ?composition ?title ?composerName WHERE
{?composition a omac:MusicComposition; 
      dcterms:title ?title;
      omac:hasComposer/schema:name ?composerName. 

} order by ?composition
"""

[[tabGroups.tabs]]
name="Compositions and their genre"
query="""

## This query retrieves compositions, their composers and genres

prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>
prefix dcterms: <http://purl.org/dc/terms/>
prefix data: <https://data.crimproject.org/>
prefix omac: <https://omac.crimproject.org/>
PREFIX schema: <https://schema.org/>

SELECT ?composition ?title ?genreLabel ?composerName WHERE
{?composition a omac:MusicComposition; 
      dcterms:title ?title;
      omac:hasAttribute ?genre;
       omac:hasComposer/schema:name ?composerName.

?genre omac:hasAttributeValue/rdfs:label ?genreLabel.

}
"""

[[tabGroups.tabs]]
name="Compositions' genre other than mass"
query="""

## This query retrieves compositions other than masses with their composers and genres

prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>
prefix dcterms: <http://purl.org/dc/terms/>
prefix data: <https://data.crimproject.org/>
prefix omac: <https://omac.crimproject.org/>
PREFIX schema: <https://schema.org/>

SELECT ?composition ?title ?genreLabel ?composerName WHERE
{?composition a omac:MusicComposition; 
      dcterms:title ?title;
      omac:hasAttribute ?genre;
      omac:hasComposer/schema:name ?composerName.

  		?genre omac:hasAttributeValue ?genreValue. 
      ?genreValue rdfs:label ?genreLabel.
      FILTER (?genreValue != <https://data.crimproject.org/value/mass>)

} 
"""

[[tabGroups.tabs]]
name="Compositions and their sections"
query="""

## This query retrieves compositions and their sections

prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>
prefix dcterms: <http://purl.org/dc/terms/>
prefix data: <https://data.crimproject.org/>
prefix omac: <https://omac.crimproject.org/>
PREFIX schema: <https://schema.org/>

SELECT ?composition ?title ?section ?sectionTitle WHERE
{?composition a omac:MusicComposition;
dcterms:title ?title;
omac:hasSection ?section.
?section a omac:MusicSection;
dcterms:title ?sectionTitle. 

}
"""

[[tabGroups.tabs]]
name="Claims"
query="""

## This query retrieves all claims

prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>
prefix dcterms: <http://purl.org/dc/terms/>
prefix data: <https://data.crimproject.org/>
prefix omac: <https://omac.crimproject.org/>
PREFIX schema: <https://schema.org/>

SELECT ?claim ?subclass ?label ?observerName
WHERE
{?claim a omac:Claim; a ?subclass;
rdfs:label ?label;
omac:assertedBy/schema:name ?observerName. 
FILTER(?subclass != omac:Claim)
} order by ?subclass
"""

[[tabGroups.tabs]]
name="Claims of structure"
query="""

## This query retrieves claims of structure

prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>
prefix dcterms: <http://purl.org/dc/terms/>
prefix data: <https://data.crimproject.org/>
prefix omac: <https://omac.crimproject.org/>
PREFIX schema: <https://schema.org/>

SELECT ?strClaim ?personName ?segment ?piece ?schemaValue WHERE
{?strClaim a omac:StructureClaim;
omac:assertedBy/schema:name ?personName;
omac:hasMusicTextArg ?segment;
omac:hasAttributeArg ?schema;
omac:hasAttributeValueArg ?schemaValue.

?segment a omac:MusicSegment;
omac:segmentOf ?piece.

}
"""

[[tabGroups.tabs]]
name="Claims of similarity 1"
query="""

## This query retrieves the model and derivative *segments* identified in a similarity claim

prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>
prefix dcterms: <http://purl.org/dc/terms/>
prefix data: <https://data.crimproject.org/>
prefix omac: <https://omac.crimproject.org/>
PREFIX schema: <https://schema.org/>

SELECT ?simClaim ?personName ?model ?derivative ?similarityLabel WHERE
{?simClaim a omac:SimilarityClaim;
omac:assertedBy/schema:name ?personName;
omac:hasModelArg ?model;
omac:hasDerivativeArg ?derivative;
omac:hasSimilarityTypeArg ?similarityType.
?similarityType rdfs:label ?similarityLabel.} 
"""

[[tabGroups.tabs]]
name="Claims of similarity 2"
query="""

## This query retrieves the model and derivative identified in a similarity claim

prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>
prefix dcterms: <http://purl.org/dc/terms/>
prefix data: <https://data.crimproject.org/>
prefix omac: <https://omac.crimproject.org/>
PREFIX schema: <https://schema.org/>

SELECT ?simClaim ?personName ?modelTxt ?derivativeTxt ?similarityLabel WHERE
{?simClaim a omac:SimilarityClaim;
omac:assertedBy/schema:name ?personName;
omac:hasModelArg ?model;
omac:hasDerivativeArg ?derivative;
omac:hasSimilarityTypeArg ?similarityType.
?similarityType rdfs:label ?similarityLabel.

?model omac:segmentOf ?modelTxt.
?derivative omac:segmentOf ?derivativeTxt.

}
"""
