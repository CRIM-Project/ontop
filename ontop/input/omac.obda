[PrefixDeclaration]
:		https://data.crimproject.org/
dbo:		http://dbpedia.org/ontology/
dbp:		http://dbpedia.org/property/
owl:		http://www.w3.org/2002/07/owl#
rdf:		http://www.w3.org/1999/02/22-rdf-syntax-ns#
wdt:		http://www.wikidata.org/prop/direct/
xml:		http://www.w3.org/XML/1998/namespace
xsd:		http://www.w3.org/2001/XMLSchema#
obda:		https://w3id.org/obda/vocabulary#
omac:		https://omac.crimproject.org/
rdfs:		http://www.w3.org/2000/01/rdf-schema#
skos:		http://www.w3.org/2004/02/skos/core#
swrl:		http://www.w3.org/2003/11/swrl#
viaf:		http://viaf.org/viaf/
swrla:		http://swrl.stanford.edu/ontologies/3.3/swrla.owl#
swrlb:		http://www.w3.org/2003/11/swrlb#
schema:		https://schema.org/
dcterms:		http://purl.org/dc/terms/

[MappingDeclaration] @collection [[
mappingId	MAPID-person
target		:person/{person_id} a schema:Person ; schema:name {name}^^xsd:string ; rdfs:label {name}^^xsd:string .
source		select person_id, name from lens_crimperson

mappingId	MAPID-person-viaf
target		:person/{person_id} wdt:P214 {remarks}^^xsd:anyURI .
source		select person_id, remarks from lens_crimperson where remarks != ''

mappingId	MAPID-role
target		:person/{person_id} omac:hasRole :role/{role_type_id} . :role/{role_type_id} a omac:SocialRole ; rdfs:label {role_type_id}^^xsd:string .
source		select person_id, role_type_id from lens_crimrole where role_type_id != ''

mappingId	MAPID-mass
target		:mass/{mass_id} a omac:MusicComposition ; dcterms:title {title}^^xsd:string ; omac:hasComposer :person/{composer_id} ; omac:hasAttribute :attribute/{mass_id}-mass-genre . :attribute/{mass_id}-mass-genre a omac:GenreAttribute ; rdfs:label "genre of {mass_id}"^^xsd:string ; omac:hasAttributeValue :value/genre/{genre_id} . :value/genre/{genre_id} a omac:GenreValue ; rdfs:label {genre_id}^^xsd:string .
source		select mass_id, title, composer_id, genre_id from lens_crimmass

mappingId	MAPID-piece
target		:source/{piece_id} a omac:MusicText ; dcterms:title {title}^^xsd:string ; dbp:fullTitle {full_title}^^xsd:string ; omac:hasComposer :person/{composer_id} .
source		select piece_id, title, full_title, composer_id from lens_crimpiece

mappingId	MAPID-piece-section-of-mass
target		:source/{piece_id} a omac:MusicSection ; omac:sectionOf :mass/{mass_id} .
source		select piece_id, mass_id from lens_crimpiece where genre_id = 'mass'

mappingId	MAPID-piece-other-than-mass
target		:source/{piece_id} a omac:MusicComposition ; omac:hasAttribute :attribute/{piece_id}-piece-genre . :attribute/{piece_id}-piece-genre a omac:GenreAttribute ; rdfs:label "genre of {piece_id}"^^xsd:string ; omac:hasAttributeValue :value/genre/{genre_id} . :value/genre/{genre_id} a omac:GenreValue ; rdfs:label {genre_id}^^xsd:string .
source		select piece_id, genre_id from lens_crimpiece where genre_id != 'mass'

mappingId	MAPID-crimobservation
target		:claim/{id}-structure a omac:StructureClaim ; rdfs:label "claim of structure with CRIM id {id}"^^xsd:string ; omac:assertedBy :person/{observer_id} .
source		select id, observer_id from lens_crimobservation

mappingId	MAPID-crimobservation-musical-type
target		:claim/{id}-structure omac:hasAttributeValueArg :value/musical-type/{musical_type} . :value/musical-type/{musical_type} a omac:SchemaValue ; rdfs:label {musical_type}^^xsd:string .
source		select id, musical_type from lens_crimobservation where musical_type != ''

mappingId	MAPID-crimobservation-music-segment
target		:claim/{id}-structure omac:hasMusicTextArg :source/{piece_id}/{emamodified}-segment ; omac:hasAttributeArg :attribute/{piece_id}/{emamodified}-schema . :attribute/{piece_id}/{emamodified}-schema a omac:SchemaAttribute ; omac:attributeOf :source/{piece_id}/{emamodified}-segment ; rdfs:label "schema attribute of segment :source/{piece_id}/{emamodified}-segment"^^xsd:string . :source/{piece_id}/{emamodified}-segment a omac:MusicSegment ; omac:segmentOf :source/{piece_id} ; rdfs:label "segment of :source/{piece_id}"^^xsd:string ; omac:emaIdentifier {ema}^^xsd:string .
source		select id, emamodified, ema, piece_id from lens_crimobservation where ema is not null

mappingId	MAPID-relationship-model-for
target		:source/{model_piece_id} omac:modelFor :source/{derivative_piece_id} .
source		select model_piece_id, derivative_piece_id from lens_crimrelationship

mappingId	MAPID-relationship-similarity-claim
target		:claim/{id}-similarity a omac:SimilarityClaim ; rdfs:label "claim of similarity with CRIM id {id}"^^xsd:string ; omac:assertedBy :person/{observer_id} ; omac:hasSimilarityTypeArg :value/{relationship_type} . :value/{relationship_type} a omac:SimilarityType ; rdfs:label {relationship_type}^^xsd:string .
source		select id, relationship_type, observer_id from lens_crimrelationship

mappingId	MAPID-relationship-similarity-claim-derivative
target		:claim/{id}-similarity omac:hasDerivativeArg :source/{piece_id}/{emamodified}-segment .
source		select R.id, O.piece_id, O.emamodified from lens_crimrelationship R join lens_crimobservation O on R.derivative_observation_id = O.id

mappingId	MAPID-relationship-similarity-claim-model
target		:claim/{id}-similarity omac:hasModelArg :source/{piece_id}/{emamodified}-segment .
source		select R.id, O.piece_id, O.emamodified from lens_crimrelationship R join lens_crimobservation O on R.model_observation_id = O.id
]]
