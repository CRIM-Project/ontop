version: '3.4'
services:
  ontop:
    image: ontop/ontop:5.2.1
    container_name: 'ontop'
    restart: unless-stopped
    network_mode: host
    env_file: .env
    environment:
      ONTOP_ONTOLOGY_FILE: /opt/ontop/input/omac.owl
      ONTOP_MAPPING_FILE: /opt/ontop/input/omac.obda
      ONTOP_PROPERTIES_FILE: /opt/ontop/input/vkg.docker.properties
      ONTOP_PORTAL_FILE: /opt/ontop/input/vkg.toml
      ONTOP_LENSES_FILE: /opt/ontop/input/lenses.json
      ONTOP_DB_URL: ${ONTOP_DB_URL} 
      ONTOP_DB_USER: ${ONTOP_DB_USER}
      ONTOP_DB_PASSWORD: ${ONTOP_DB_PASSWORD} 
      ONTOP_CORS_ALLOWED_ORIGINS: ${ONTOP_CORS_ALLOWED_ORIGINS}
      ONTOP_DEV_MODE: "true"
    ports:
    - '18080:8080'
    volumes:
    - ./ontop/input:/opt/ontop/input
    - ./ontop/jdbc:/opt/ontop/jdbc
    entrypoint: [
      '/opt/ontop/entrypoint.sh',
      # '/opt/ontop/input/bin/wait-for-it.sh', 'localhost:5432', '--timeout=0', '--strict', '--',
      ]

  lodview:
    image: dan3213/lodview:2023-05-02
    container_name: 'lodview'
    network_mode: host
    restart: unless-stopped
    volumes:
    - ./lodview/conf.ttl:/usr/local/tomcat/webapps/ROOT/WEB-INF/conf.ttl           # mount LodView configuration file
    - ./ontop/input/omac.owl:/usr/local/tomcat/webapps/ROOT/WEB-INF/ontologies/crim.owl  # mount Ontology
    # ports:
    # - '${LODVIEW_PORT:-10000}:9090'         # the exposed port of LodView (matching the one used in IRI templates)
    depends_on:
    - 'ontop'
